version: '3'

vars:
  SHELL_TO_USE:
    sh: |
      echo ${SHELL_TO_USE:-$(basename $SHELL)}

tasks:
  build:
    desc: "Build the project"
    cmds:
      - "go build -o {{.CLI_ARGS}}"
  
  test:
    desc: "Run tests"
    cmds:
      - "go test -race -short -v ./..."

  coverage:
    desc: "Run tests with coverage"
    cmds:
      - "go test -cover -covermode=count -coverprofile=coverage.out ./..."
      - "go tool cover -func coverage.out"

  typespec:
    desc: "Generate OpenAPI spec"
    cmds:
      - "{{.SHELL_TO_USE}} scripts/compile-spec.sh"
      - "go generate ./..."
    
  lint-fix:
    desc: "Lint Go Code"
    cmds:
      - "golangci-lint run --fix"
  
  lint:
    desc: "Lint all modules"
    cmds:
      - "golangci-lint run"
  
  changelog:
    desc: "Generate a changelog for a pull request"
    cmds:
      - "{{.SHELL_TO_USE}} scripts/generate-pr-changelog.sh"

  setup-git-hooks:
    desc: "Set up Git hooks"
    cmds:
      - "chmod +x ./scripts/hooks/pre-commit"
      - "chmod +x ./scripts/hooks/prepare-commit-msg"
      - "git config core.hooksPath ./scripts/hooks"

  clean:
    desc: "Clean up the project"
    cmds:
      # Remove the out folder
      - "rm -rf out"
      # Remove the coverage file
      - "rm -f coverage.out"