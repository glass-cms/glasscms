openapi: 3.0.0
info:
  title: GlassCMS API
  version: 0.0.0
  description: REST API for Glass Content Management System

tags:
  - name: Items
    description: Operations for managing content items

security:
  - bearerAuth: []

paths:
  /items:
    post:
      tags: ['Items']
      operationId: Items_create
      description: Creates a new instance of the resource.
      summary: Create a new item
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '201':
          description: Resource create operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemCreate'
    get:
      tags: ['Items']
      operationId: Items_list
      description: Lists all items resources.
      summary: List all items
      parameters:
        - name: fields
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags: ['Items']
      operationId: Items_upsert
      description: Creates or updates many items
      summary: Create or update many items
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ItemUpsert'
  /items/{name}:
    get:
      tags: ['Items']
      operationId: Items_get
      description: Gets an instance of the resource.
      summary: Get an item
      parameters:
        - $ref: '#/components/parameters/ItemKey'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags: ['Items']
      operationId: Items_update
      description: Updates an existing instance of the resource.
      summary: Update an item
      parameters:
        - $ref: '#/components/parameters/ItemKey'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemUpdate'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: API token
  parameters:
    ItemKey:
      name: name
      in: path
      required: true
      schema:
        type: string
  schemas:
    Error:
      type: object
      required:
        - type
        - code
        - message
        - details
      properties:
        type:
          $ref: '#/components/schemas/ErrorType'
        code:
          $ref: '#/components/schemas/ErrorCode'
        message:
          type: string
        details:
          type: object
          additionalProperties: {}
      description: Error is the response model when an API call is unsuccessful.
    ErrorCode:
      type: string
      enum:
        - parameter_invalid
        - parameter_missing
        - processing_error
        - resource_already_exists
        - resource_missing
    ErrorType:
      type: string
      enum:
        - api_error
        - invalid_request_error
    Item:
      type: object
      required:
        - name
        - display_name
        - content
        - create_time
        - update_time
        - properties
        - metadata
        - hash
      properties:
        name:
          type: string
        display_name:
          type: string
        content:
          type: string
        create_time:
          type: string
          format: date-time
        update_time:
          type: string
          format: date-time
        delete_time:
          type: string
          format: date-time
        properties:
          type: object
          additionalProperties: {}
        metadata:
          type: object
          additionalProperties: {}
        hash:
          type: string
          description: represents a hash value calculated from the item's content.
          readOnly: true
      description: Item represents an individual content item.
    ItemCreate:
      type: object
      required:
        - name
        - display_name
        - content
        - create_time
        - update_time
        - properties
        - metadata
      properties:
        name:
          type: string
        display_name:
          type: string
        content:
          type: string
        create_time:
          type: string
          format: date-time
        update_time:
          type: string
          format: date-time
        delete_time:
          type: string
          format: date-time
        properties:
          type: object
          additionalProperties: {}
        metadata:
          type: object
          additionalProperties: {}
      description: Resource create operation model.
    ItemUpdate:
      type: object
      properties:
        display_name:
          type: string
        content:
          type: string
        create_time:
          type: string
          format: date-time
        update_time:
          type: string
          format: date-time
        delete_time:
          type: string
          format: date-time
        properties:
          type: object
          additionalProperties: {}
        metadata:
          type: object
          additionalProperties: {}
      description: Resource create or update operation model.
    ItemUpsert:
      type: object
      required:
        - name
        - display_name
        - content
        - create_time
        - update_time
        - properties
        - metadata
      properties:
        name:
          type: string
        display_name:
          type: string
        content:
          type: string
        create_time:
          type: string
          format: date-time
        update_time:
          type: string
          format: date-time
        delete_time:
          type: string
          format: date-time
        properties:
          type: object
          additionalProperties: {}
        metadata:
          type: object
          additionalProperties: {}
      description: Upsert operation model.
